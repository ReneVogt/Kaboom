<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KaboomEngine</name>
    </assembly>
    <members>
        <member name="T:Com.Revo.Games.KaboomEngine.Cell">
            <summary>
            Represents a cell on a Kaboom field.
            </summary>
        </member>
        <member name="P:Com.Revo.Games.KaboomEngine.Cell.X">
            <summary>
            The x-coordinate of the cell.
            </summary>
        </member>
        <member name="P:Com.Revo.Games.KaboomEngine.Cell.Y">
            <summary>
            The y-coordinate of the cell.
            </summary>
        </member>
        <member name="P:Com.Revo.Games.KaboomEngine.Cell.AdjacentMines">
            <summary>
            Number of adjacent cells containing mines.
            This property is only valid if the cell has
            already been uncovered (hence <see cref="P:Com.Revo.Games.KaboomEngine.Cell.IsOpen"/> is <code>true</code>).
            </summary>
        </member>
        <member name="P:Com.Revo.Games.KaboomEngine.Cell.IsMine">
            <summary>
            Tells if this cell contains a mine.
            This property is only valid if the cell has
            already been uncovered (hence <see cref="P:Com.Revo.Games.KaboomEngine.Cell.IsOpen"/> is <code>true</code>)
            or the containing field's <see cref="P:Com.Revo.Games.KaboomEngine.Field.State"/> is no longer <see cref="F:Com.Revo.Games.KaboomEngine.FieldState.Sweeping"/>.
            </summary>
        </member>
        <member name="P:Com.Revo.Games.KaboomEngine.Cell.IsOpen">
            <summary>
            Tells if this cell has already been uncovered.
            </summary>
        </member>
        <member name="P:Com.Revo.Games.KaboomEngine.Cell.IsFlagged">
            <summary>
            Gets or sets wether this cell has a flag on it.
            This property is only valid as long as the cell is not uncovered.
            </summary>
        </member>
        <member name="E:Com.Revo.Games.KaboomEngine.Cell.CellChanged">
            <summary>
            Raised if the cell's state has been changed.
            </summary>
        </member>
        <member name="M:Com.Revo.Games.KaboomEngine.Cell.Uncover">
            <summary>
            Uncovers this cell.
            This call is delegated to the <see cref="M:Com.Revo.Games.KaboomEngine.Field.Uncover(System.Int32,System.Int32)"/> method of the
            <see cref="T:Com.Revo.Games.KaboomEngine.Field"/> owning this cell. See there for what may happen if
            this method is called.
            </summary>
        </member>
        <member name="T:Com.Revo.Games.KaboomEngine.CellCollection">
            <summary>
            Represents a two-dimensional readonly collection
            of Kaboom cells.
            </summary>
        </member>
        <member name="P:Com.Revo.Games.KaboomEngine.CellCollection.Item(System.Int32,System.Int32)">
            <summary>
            Gets the Kaboom cell at the specified coordinates.
            </summary>
            <param name="x">The x-coordinate of the cell.</param>
            <param name="y">The x-coordinate of the cell.</param>
            <returns>The cell (<see cref="T:Com.Revo.Games.KaboomEngine.Cell"/> at the specified location.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The <paramref name="x"/>- and/or <paramref name="y"/>-coordinate are outside the bounds of this field.</exception>
        </member>
        <member name="M:Com.Revo.Games.KaboomEngine.CellCollection.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Com.Revo.Games.KaboomEngine.CellCollection.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="T:Com.Revo.Games.KaboomEngine.FieldState">
            <summary>
            Represents the state of a Kaboom field (<see cref="T:Com.Revo.Games.KaboomEngine.Field"/>).
            </summary>
        </member>
        <member name="F:Com.Revo.Games.KaboomEngine.FieldState.Sweeping">
            <summary>
            Sweeping is in progress.
            </summary>
        </member>
        <member name="F:Com.Revo.Games.KaboomEngine.FieldState.Solved">
            <summary>
            The field has been solved.
            </summary>
        </member>
        <member name="F:Com.Revo.Games.KaboomEngine.FieldState.Exploded">
            <summary>
            The field is exploded.
            </summary>
        </member>
        <member name="T:Com.Revo.Games.KaboomEngine.Field">
            <summary>
            Represents a Kaboom mine field.
            </summary>
        </member>
        <member name="P:Com.Revo.Games.KaboomEngine.Field.Width">
            <summary>
            The width of this Kaboom field.
            </summary>
        </member>
        <member name="P:Com.Revo.Games.KaboomEngine.Field.Height">
            <summary>
            The height of this Kaboom field.
            </summary>
        </member>
        <member name="P:Com.Revo.Games.KaboomEngine.Field.NumberOfMines">
            <summary>
            Number of mines on this Kaboom field.
            </summary>
        </member>
        <member name="P:Com.Revo.Games.KaboomEngine.Field.Cells">
            <summary>
            The cells of this Kaboom field.
            </summary>
        </member>
        <member name="P:Com.Revo.Games.KaboomEngine.Field.State">
            <summary>
            The state of this Kaboom field.
            </summary>
        </member>
        <member name="E:Com.Revo.Games.KaboomEngine.Field.StateChanged">
            <summary>
            Raised if the state of this field has changed.
            </summary>
        </member>
        <member name="M:Com.Revo.Games.KaboomEngine.Field.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new Kaboom field of the specified size
            and containing the specified number of mines.
            </summary>
            <param name="width">The width of the field to create.</param>
            <param name="height">The height of the field to create.</param>
            <param name="numberOfMines">The number of mines the field should contain.</param>
        </member>
        <member name="M:Com.Revo.Games.KaboomEngine.Field.Uncover(System.Int32,System.Int32)">
            <summary>
            Uncovers cells depending on the state of the cell at the specified location.
            If the cell is closed and flagged, nothing will happen.
            If the cell is closed and not flagged, it will be uncovered.
            If the cell contains a mine, you are dead.
            If it does not contain a mine and none of the adjacent cells contains mine,
            the adjacent cells will be uncovered, too.
            If this cell has already been uncovered, all(!) flag-satisfied cells will be opened.
            That is, for all cells that are opened and have an adjacent mine count equal to the
            number of adjacent flagged cells, the not-flagged adjacent cells will be uncovered.
            </summary>
            <param name="x">The x-coordinate of the cell to uncover.</param>
            <param name="y">The y-coordinate of the cell to uncover.</param>
            <exception cref="T:System.IndexOutOfRangeException">The <paramref name="x"/>- and/or <paramref name="y"/>-coordinate was outside the bounds of this field.</exception>
        </member>
        <member name="M:Com.Revo.Games.KaboomEngine.Field.GetCoordinatesAdjacentTo(System.Int32,System.Int32)">
            <summary>
            Enumerates the coordinates of the cells adjacent to the cell with the
            specified coordinates.
            </summary>
            <param name="x">The x-coordinate of the current cell.</param>
            <param name="y">The y-coordinate of the current cell.</param>
            <returns>An enumeration of the coordinates of the cells adjacent to the specified cell.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The specified cell is outside the engine.</exception>
        </member>
    </members>
</doc>
